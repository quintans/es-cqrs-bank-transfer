version: '3.4'

networks:
  my-network:
    driver: bridge

services:
  # svc-account:
  #   build: 
  #     context: ./account
  #     # dockerfile: ./Dockerfile
  #   depends_on:
  #     - mongo
  #   environment:
  #     - ES_HOST=mongo
  #     - ES_NAME=accounts
  #     - API_PORT=8000
  #     - NATS_ADDRESS=nats:4222
  #     - TOPIC=accounts
  #     - CONSUL_ADDRESS=consul:8500
  #     - PARTITION_SLOTS=1-2,3-4 # 4 partitions spread through 2 workers, 2 partitions each
  #   networks:
  #     - my-network
  #   ports:
  #     - 8000:8000
  #     - 3000:3000

  # svc-balance:
  #   build: 
  #     context: ./balance
  #     # dockerfile: ./Dockerfile
  #   depends_on:
  #     - nats
  #     - elastic
  #     - consul
  #     - svc-forwarder
  #   environment:
  #     - NATS_ADDRESS=nats:4222
  #     - TOPIC=accounts
  #     - CONSUL_ADDRESS=consul:8500
  #     - ES_ADDRESS=svc-forwarder:3000
  #     - ELASTIC_ADDRESSES=http://elastic:9200
  #     - PARTITIONS=4
  #   networks:
  #     - my-network
  #   ports:
  #     - 8030:8030

  nats:
    image: nats-streaming
    ports:
      - "4222:4222"
      - "8222:8222"

  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.8.0
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - my-network

  kibana:
    image: docker.elastic.co/kibana/kibana:7.8.0
    depends_on:
      - elastic
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://elastic:9200
      ELASTICSEARCH_HOSTS: http://elastic:9200
    networks:
      - my-network

  # redis:
  #   image: "redis:alpine"
  #   ports:
  #     - "6379:6379"
  #   networks:
  #     - my-network

  consul:
    image: bitnami/consul:latest
    ports:
      - '8300:8300'
      - '8301:8301'
      - '8301:8301/udp'
      - '8500:8500'
      - '8600:8600'
      - '8600:8600/udp'
    networks:
      - my-network

  M1:
    hostname: M1
    container_name: M1
    image: mongo:latest
    environment:
      # MONGO_INITDB_ROOT_USERNAME: root
      # MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: account
      MONGO_REPLICA_SET_NAME: rs0
    expose:
      - 27017
    ports:
      - 27017:27017
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0" ]

  mongo:
    image: mongo:latest
    links:
      - M1:M1
    depends_on:
      - M1
    volumes:
      - ./e2e/scripts:/scripts
    restart: "no"
    entrypoint: [ "bash", "/scripts/mongo_setup.sh" ]

  # mongo-express:
  #   image: mongo-express
  #   ports:
  #     - 8081:8081
  #   environment:
  #     ME_CONFIG_BASICAUTH_USERNAME: root
  #     ME_CONFIG_BASICAUTH_PASSWORD: password
  #     # ME_CONFIG_MONGODB_PORT: 27017
  #     # # ME_CONFIG_MONGODB_ADMINUSERNAME: root
  #     # # ME_CONFIG_MONGODB_ADMINPASSWORD: password
  #     ME_CONFIG_MONGODB_SERVER: "M1"
  #   depends_on:
  #     - mongo
  #   links:
  #     - mongo
  #   networks:
  #     - my-network
